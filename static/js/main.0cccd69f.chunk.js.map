{"version":3,"sources":["services/AccountService.js","Login.js","Register.js","services/token-service.js","Header.js","BoardCard.js","AddBoard.js","services/BoardService.js","PublicBoards.js","HomePage.js","BoardItem.js","BoardDetail.js","BoardDetailPage.js","App.js","index.js"],"names":["API_URL","userID","a","axios","get","res","status","data","console","log","email","password","firstName","lastName","post","localStorage","setItem","tokenId","id","accessToken","put","funcs","login","loginWithGoogle","loginWithFacebook","register","getUser","updateProfile","useStyles","makeStyles","theme","root","flexGrow","padding","title","color","fontWeight","Login","onSuccess","classes","useState","setEmail","setPassword","event","preventDefault","AccountService","token","onGoogleSuccess","onFacebookCallback","className","Grid","container","direction","justify","alignItems","spacing","item","Typography","variant","onSubmit","e","FormControl","Box","width","InputLabel","htmlFor","Input","type","fullWidth","value","onInput","String","target","Button","to","clientId","buttonText","onFailure","cookiePolicy","appId","fields","callback","Register","setFirstName","setLastName","getToken","getItem","getUserID","JWT","verify","sub","deleteToken","removeItem","appbarstyle","backgroundColor","typographyStyle","flex","Header","onAvatarClick","user","setUser","dialogIsOpen","setDialogIsOpen","newFirstName","setNewFirstName","newLastName","setNewLastName","history","useHistory","FetchData","userData","useEffect","handleClose","handleProfileUpdate","AppBar","position","Toolbar","onClick","push","Avatar","src","avatar","display","TokenService","window","location","reload","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","defaultValue","onChange","DialogActions","minWidth","pos","marginBottom","modifiedDate","fontSize","icon","BoardCard","boardID","name","cardCount","deleteAction","Card","CardContent","align","moment","format","IconButton","aria-label","AddBoard","text","borderRadius","size","delete","boardName","info","column","newName","oldInfo","newInfo","getBoards","getByID","addBoard","getBoardDetail","addWentWell","addToImprove","addActionItem","deleteBoard","deleteBoardDetail","updateBoardName","updateItemContent","PublicBoards","boards","setBoards","isLoading","setIsLoading","addDiaIsOpen","setAddDiaIsOpen","newBoardName","setNewBoardName","FetchBoard","BoardService","boardList","handleAddNewBoard","listView","sx","length","i","_id","titleStyles","marginBlockStart","HomePage","m","ml","xs","BoardItem","columnName","onActionSucess","content","setContent","handleContentUpdate","Paper","elevation","BoardDetail","wentWell","setWentWell","toImprove","setToImprove","actionItems","setActionItems","newWentWell","setNewWentWell","newToImprove","setNewToImprove","newActionItem","setNewActionItem","paper","textAlign","palette","secondary","FetchBoardDetail","handleAddWentWell","handleAddToImprove","handleAddActionItem","wentWellListView","toImproveListView","actionItemsListView","BoardDetailPage","useParams","board","setBoard","setBoardName","FetchBoardInfo","handleChangeBoardName","App","props","tokenService","setUserID","exact","path","replace","logoutAction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cccd69f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = \"https://sprint-retrospective-api.herokuapp.com\";\r\n// const API_URL = \"http://localhost:5000\";\r\n\r\nasync function getUser(userID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/users/${userID}`);\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function register(email, password, firstName, lastName) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/register`, { email, password, firstName, lastName });\r\n        if (res.status === 201) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function login(email, password) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/`, { email, password });\r\n        if (res.status === 200) {\r\n            localStorage.setItem(\"token\", res.data);\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function loginWithGoogle(tokenId) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/login-with-google`, { tokenId });\r\n        if (res.status === 200) {\r\n            localStorage.setItem(\"token\", res.data);\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function loginWithFacebook(id, accessToken) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/login-with-facebook`, { id, accessToken });\r\n        if (res.status === 200) {\r\n            localStorage.setItem(\"token\", res.data);\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function updateProfile(userID, firstName, lastName) {\r\n    try {\r\n        const res = await axios.put(`${API_URL}/users/update`, { userID, firstName, lastName });\r\n        if (res.status === 200) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nconst funcs = { login, loginWithGoogle, loginWithFacebook, register, getUser, updateProfile };\r\nexport default funcs;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Grid, Typography, FormControl, InputLabel, Input, Box, Button } from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\nimport AccountService from './services/AccountService';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 50,\r\n    },\r\n    title: {\r\n        color: '#283593',\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function Login({ onSuccess }) {\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const login = async (event) => {\r\n        event.preventDefault();\r\n        const token = await AccountService.login(email, password);\r\n        if (token) {\r\n            console.log(\"[Login email-password] Nhan duoc Token: \", token);\r\n            onSuccess();\r\n        } else {\r\n            console.log(\"[Login email-password] Khong nhan duoc token\");\r\n        }\r\n    }\r\n\r\n    const onGoogleSuccess = async (res) => {\r\n        const token = await AccountService.loginWithGoogle(res.tokenId);\r\n        if (token) {\r\n            console.log(\"[Login Google] Nhan duoc Token: \", token);\r\n            onSuccess();\r\n        } else {\r\n            console.log(\"[Login Google] Khong nhan duoc token\");\r\n        }\r\n    }\r\n\r\n    const onGoogleFailure = (res) => {\r\n        console.log(\"[Login Google] Failure: \", res);\r\n    }\r\n\r\n    const onFacebookCallback = async (res) => {\r\n        const token = await AccountService.loginWithFacebook(res.id, res.accessToken);\r\n        if (token) {\r\n            console.log(\"[Login Facebook] Nhan duoc Token: \", token);\r\n            onSuccess();\r\n        } else {\r\n            console.log(\"[Login Facebook] Khong nhan duoc token\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item>\r\n                    <Typography className={classes.title} variant=\"h4\" >\r\n                        Login\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <form onSubmit={(e) => login(e)}>\r\n                        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-email\">Email</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-email\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={email}\r\n                                            onInput={e => setEmail(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350} >\r\n                                        <InputLabel htmlFor=\"input-password\">Password</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-password\"\r\n                                            type=\"password\"\r\n                                            fullWidth\r\n                                            value={password}\r\n                                            onInput={e => setPassword(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button type=\"submit\">Login</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>\r\n                        Don't have an account? <Link to=\"/register\">Register</Link>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Box>\r\n                        <GoogleLogin\r\n                            clientId=\"656948797545-io59r3h73is40b8r755em4u5ghgntn21.apps.googleusercontent.com\"\r\n                            buttonText=\"Login with Google\"\r\n                            onSuccess={onGoogleSuccess}\r\n                            onFailure={onGoogleFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Box>\r\n                        <FacebookLogin\r\n                            appId=\"384712686083034\"\r\n                            fields=\"name,email,picture\"\r\n                            callback={onFacebookCallback} />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Grid, Typography, FormControl, InputLabel, Input, Box, Button } from '@material-ui/core';\r\n\r\nimport AccountService from './services/AccountService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 50,\r\n    },\r\n    title: {\r\n        color: '#283593',\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nexport default function Register({ onSuccess }) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const register = async (event) => {\r\n        event.preventDefault();\r\n        const token = await AccountService.register(email, password, firstName, lastName);\r\n        console.log(\"Register token received: \", token);\r\n        if (token)\r\n            onSuccess();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item>\r\n                    <Typography className={classes.title} variant=\"h4\" >\r\n                        Register\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <form onSubmit={(e) => register(e)} >\r\n                        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-email\">Email</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-email\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={email}\r\n                                            onInput={e => setEmail(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-first-name\">First Name</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-first-name\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={firstName}\r\n                                            onInput={e => setFirstName(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-last-name\">Last Name</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-last-name\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={lastName}\r\n                                            onInput={e => setLastName(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350} >\r\n                                        <InputLabel htmlFor=\"input-password\">Password</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-password\"\r\n                                            type=\"password\"\r\n                                            fullWidth\r\n                                            value={password}\r\n                                            onInput={e => setPassword(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button type=\"submit\">Register</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>\r\n                        Already have an account? <Link to=\"/login\">Login</Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import JWT from 'jsonwebtoken';\r\n\r\n\r\nconst getToken = () => {\r\n    return localStorage.getItem(\"token\") || null;\r\n}\r\n\r\nconst getUserID = () => {\r\n    const token = getToken();\r\n    if (!token)\r\n        return null;\r\n    const payload = JWT.verify(token, \"1712354\");\r\n    return payload.sub;\r\n};\r\n\r\nconst deleteToken = () => {\r\n    return localStorage.removeItem(\"token\");\r\n}\r\n\r\nconst funcs = { getUserID, getToken, deleteToken };\r\n\r\nexport default funcs;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Typography, Avatar, Button, Dialog, DialogTitle, DialogContent, DialogActions, Grid, TextField, Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AccountService from './services/AccountService';\r\nimport TokenService from './services/token-service';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    appbarstyle: { backgroundColor: '#2196F3' },\r\n    typographyStyle: { flex: 1 }\r\n}));\r\n\r\n\r\nexport default function Header({ userID, onAvatarClick }) {\r\n    const [user, setUser] = useState(null);\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const [newFirstName, setNewFirstName] = useState(\"\");\r\n    const [newLastName, setNewLastName] = useState(\"\");\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const FetchData = async (userID) => {\r\n        if (userID) {\r\n            const userData = await AccountService.getUser(userID);\r\n            if (userData) {\r\n                setUser(userData);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => { FetchData(userID); }, []);\r\n\r\n    //Dialog\r\n    const handleClose = () => { setDialogIsOpen(false); };\r\n    const handleTextChange1 = (e) => { setNewFirstName(e.target.value) };\r\n    const handleTextChange2 = (e) => { setNewLastName(e.target.value) };\r\n    const handleProfileUpdate = async (e) => {\r\n        e.preventDefault();\r\n        const firstName = newFirstName === \"\" ? user.firstName : newFirstName;\r\n        const lastName = newLastName === \"\" ? user.lastName : newLastName;\r\n        if (await AccountService.updateProfile(userID, firstName, lastName)) {\r\n            FetchData(userID);\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className={classes.appbarstyle} >\r\n                <Toolbar>\r\n                    <Typography onClick={() => { history.push(\"/\"); }} variant=\"h5\" className={classes.typographyStyle} > Sprint Retrospective</Typography>\r\n                    <Avatar src={user ? user.avatar : \"\"} />\r\n                    <Button onClick={() => { user ? setDialogIsOpen(true) : history.push('/login') }}>\r\n                        {user ? `Hi ${user.firstName}` : \"Login now\"}\r\n                    </Button>\r\n                    <Box display={user ? \"block\" : \"none\"}>\r\n                        <Button onClick={() => { TokenService.deleteToken(); window.location.reload(true); }}>Logout</Button>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar >\r\n            {\r\n                user ?\r\n                    <Dialog open={dialogIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Change content</DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"first-name\"\r\n                                        label=\"First name\"\r\n                                        type=\"text\"\r\n                                        defaultValue={user.firstName}\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleTextChange1}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <TextField\r\n                                        autoFocus\r\n                                        margin=\"dense\"\r\n                                        id=\"last-name\"\r\n                                        label=\"Last name\"\r\n                                        type=\"text\"\r\n                                        defaultValue={user.lastName}\r\n                                        fullWidth\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleTextChange2}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                            <Button onClick={handleProfileUpdate} color=\"primary\">Save</Button>\r\n                        </DialogActions>\r\n                    </Dialog> : \"\"\r\n            }\r\n        </div >\r\n    );\r\n};","import React from 'react';\r\nimport { makeStyles, Card, CardContent, Typography, IconButton, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 200,\r\n    },\r\n    title: {\r\n        color: '#8E24AA'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    modifiedDate: {\r\n        fontSize: 15\r\n    },\r\n    icon: {\r\n        fontSize: 15,\r\n        color: '#283593',\r\n        fontWeight: 'bolder'\r\n    }\r\n});\r\n\r\n\r\nconst BoardCard = ({ boardID, name, cardCount, modifiedDate, deleteAction }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    return (\r\n        <Card variant='outlined' className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {cardCount} {cardCount > 1 ? \"cards\" : \"card\"}\r\n                </Typography>\r\n                <Typography align=\"right\" className={classes.modifiedDate}>\r\n                    <AccessTimeIcon className={classes.icon} />\r\n                    {moment(modifiedDate).format(\"DD/MM/YYYY\")}\r\n                </Typography>\r\n                <IconButton align=\"right\" aria-label=\"delete\" onClick={() => deleteAction()}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n                <Button onClick={() => { history.push(`/board-detail/${boardID}`) }}>Details</Button>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BoardCard;","import React from 'react';\r\nimport { Box, Button } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function AddBoard({ text, onClick }) {\r\n    return (\r\n        <Box borderRadius={16}>\r\n            <Button size=\"large\" variant=\"outlined\" color=\"primary\" onClick={() => { onClick() }}>\r\n                {text}\r\n            </Button>\r\n        </Box>\r\n    );\r\n};","import axios from 'axios';\r\n\r\nconst API_URL = \"https://sprint-retrospective-api.herokuapp.com\";\r\n// const API_URL = \"http://localhost:5000\";\r\n\r\nasync function getBoards(userID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/boards/${userID}`);\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function deleteBoard(boardID) {\r\n    try {\r\n        await axios.delete(`${API_URL}/boards/${boardID}`);\r\n        return true;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function addBoard(boardName, userID) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add`, { boardName, userID });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getByID(boardID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/boards/get-by-id/${boardID}`);\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getBoardDetail(boardID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/boards/details/${boardID}`);\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addWentWell(boardID, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add-went-well/`, { boardID, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addToImprove(boardID, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add-to-improve/`, { boardID, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addActionItem(boardID, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add-action-item/`, { boardID, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function deleteBoardDetail(boardID, column, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/delete-board-detail/`, { boardID, column, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateBoardName(boardID, newName) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/update-board-name/`, { boardID, newName });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateItemContent(boardID, column, oldInfo, newInfo) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/update-board-detail`, { boardID, column, oldInfo, newInfo });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst funcs = { getBoards, getByID, addBoard, getBoardDetail, addWentWell, addToImprove, addActionItem, deleteBoard, deleteBoardDetail, updateBoardName, updateItemContent };\r\n\r\n\r\nexport default funcs;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography, Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\r\n\r\nimport BoardCard from './BoardCard';\r\nimport AddBoard from './AddBoard';\r\n\r\nimport BoardService from './services/BoardService';\r\n\r\n\r\nconst PublicBoards = ({ userID }) => {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [addDiaIsOpen, setAddDiaIsOpen] = useState(false);\r\n    const [newBoardName, setNewBoardName] = useState(\"\");\r\n\r\n    //Fetch Boards action\r\n    const FetchBoard = async (userID) => {\r\n        if (userID) {\r\n            const boardList = await BoardService.getBoards(userID);\r\n            if (boardList) {\r\n                setBoards(boardList);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => { FetchBoard(userID); }, []);\r\n\r\n    //Add Dialog action\r\n    const handleClose = () => {\r\n        setAddDiaIsOpen(false);\r\n    }\r\n\r\n    const handleNewBoardNameChange = (e) => {\r\n        setNewBoardName(e.target.value);\r\n    }\r\n\r\n    const handleAddNewBoard = async (e) => {\r\n        e.preventDefault();\r\n        await BoardService.addBoard(newBoardName, userID);\r\n        FetchBoard(userID);\r\n        handleClose();\r\n    }\r\n\r\n\r\n    //Render View\r\n    const listView = [];\r\n    listView.push(\r\n        <Grid item key={(boards && boards.length) || 0} sx={4}>\r\n            <AddBoard text=\"add\"\r\n                onClick={() => {\r\n                    setAddDiaIsOpen(true);\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n    if (boards && boards.length !== 0) {\r\n        for (let i = 0; i < boards.length; i++) {\r\n            listView.push(\r\n                <Grid item key={i} sx={4}>\r\n                    <BoardCard\r\n                        boardID={boards[i]._id}\r\n                        name={boards[i].name}\r\n                        modifiedDate={boards[i].modifiedDate}\r\n                        cardCount={boards[i].cardCount}\r\n                        deleteAction={async () => {\r\n                            await BoardService.deleteBoard(boards[i]._id);\r\n                            await FetchBoard(userID);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    return (isLoading ?\r\n        <Typography>Loading...</Typography> :\r\n        <div>\r\n            <Grid container spacing={3} >{listView}</Grid>\r\n            <Dialog open={addDiaIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add new Board</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onChange={handleNewBoardNameChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleAddNewBoard} color=\"primary\">Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PublicBoards;","import React from 'react';\r\nimport { Grid, Typography, Box, makeStyles } from '@material-ui/core';\r\n\r\nimport Header from './Header';\r\nimport PublicBoards from './PublicBoards';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    titleStyles: {\r\n        marginBlockStart: 25,\r\n        color: '#283593',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({ userID }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n                <Header\r\n                    userID={userID}\r\n                    onAvatarClick={() => {\r\n                        console.log(\"avatar clicked\");\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Box m={3}>\r\n                    <Typography display=\"block\" variant=\"h5\" className={classes.titleStyles}>\r\n                        My boards\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box ml={3}>\r\n                    <Typography display=\"block\" variant=\"h6\" className={classes.titleStyles}>\r\n                        Public boards\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item container>\r\n                <Grid item xs={1} />\r\n                <Grid item>\r\n                    <PublicBoards userID={userID} />\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Grid, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from '@material-ui/core';\r\nimport BoardService from './services/BoardService';\r\n\r\nexport default function BoardItem({ boardID, columnName, info, onActionSucess }) {\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    //Dialod\r\n    const handleTextChange = (e) => { setContent(e.target.value) };\r\n    const handleClose = () => { setDialogIsOpen(false) };\r\n    const handleContentUpdate = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.updateItemContent(boardID, columnName, info, content)) {\r\n            onActionSucess();\r\n        }\r\n        handleClose();\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Paper elevation={3} >\r\n                <Grid container direction=\"row\">\r\n                    <Grid item>\r\n                        {info}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Button\r\n                                onClick={async () => {\r\n                                    if (await BoardService.deleteBoardDetail(boardID, columnName, info)) {\r\n                                        onActionSucess();\r\n                                    }\r\n                                }}>Delete</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button onClick={() => {\r\n                                setDialogIsOpen(true);\r\n                            }}>Update</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Dialog open={dialogIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Change content</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Item's content\"\r\n                        type=\"text\"\r\n                        defaultValue={info}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onChange={handleTextChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleContentUpdate} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport BoardService from './services/BoardService';\r\nimport { Grid, Typography, TextField, Button, makeStyles, Box } from '@material-ui/core';\r\n\r\nimport BoardItem from './BoardItem';\r\n\r\nexport default function BoardDetail({ boardID }) {\r\n    const [wentWell, setWentWell] = useState(null);\r\n    const [toImprove, setToImprove] = useState(null);\r\n    const [actionItems, setActionItems] = useState(null);\r\n\r\n    const [newWentWell, setNewWentWell] = useState(\"\");\r\n    const [newToImprove, setNewToImprove] = useState(\"\");\r\n    const [newActionItem, setNewActionItem] = useState(\"\");\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    //Fetch Board Details\r\n    const FetchBoardDetail = async (boardID) => {\r\n        const res = await BoardService.getBoardDetail(boardID);\r\n        if (res) {\r\n            setWentWell(res.wentWell);\r\n            setToImprove(res.toImprove);\r\n            setActionItems(res.actionItems);\r\n        } else\r\n            console.log(\"Not have board details\");\r\n    }\r\n    useEffect(() => { FetchBoardDetail(boardID); }, []);\r\n\r\n    //Add new\r\n    const handleWentWellChange = (e) => {\r\n        setNewWentWell(e.target.value);\r\n    };\r\n    const handleToImproveChange = (e) => {\r\n        setNewToImprove(e.target.value);\r\n    };\r\n    const handleActionItemChange = (e) => {\r\n        setNewActionItem(e.target.value);\r\n    }\r\n    const handleAddWentWell = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.addWentWell(boardID, newWentWell)) {\r\n            FetchBoardDetail(boardID);\r\n        }\r\n    }\r\n    const handleAddToImprove = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.addToImprove(boardID, newToImprove)) {\r\n            FetchBoardDetail(boardID);\r\n        }\r\n    }\r\n    const handleAddActionItem = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.addActionItem(boardID, newActionItem)) {\r\n            FetchBoardDetail(boardID);\r\n        }\r\n    }\r\n\r\n    //Render\r\n    const wentWellListView = [];\r\n    if (wentWell && wentWell.length !== 0) {\r\n        for (let i = 0; i < wentWell.length; i++) {\r\n            wentWellListView.push(\r\n                <Grid item key={i}>\r\n                    <BoardItem\r\n                        boardID={boardID}\r\n                        columnName=\"WentWell\"\r\n                        info={wentWell[i]}\r\n                        onActionSucess={async () => { await FetchBoardDetail(boardID) }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    const toImproveListView = [];\r\n    if (toImprove && toImprove.length !== 0) {\r\n        for (let i = 0; i < toImprove.length; i++) {\r\n            toImproveListView.push(\r\n                <Grid item key={i}>\r\n                    <BoardItem\r\n                        boardID={boardID}\r\n                        columnName=\"ToImprove\"\r\n                        info={toImprove[i]}\r\n                        onActionSucess={async () => { await FetchBoardDetail(boardID) }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    const actionItemsListView = [];\r\n    if (actionItems && actionItems.length !== 0) {\r\n        for (let i = 0; i < actionItems.length; i++) {\r\n            actionItemsListView.push(\r\n                <Grid item key={i}>\r\n                    <BoardItem\r\n                        boardID={boardID}\r\n                        columnName=\"actionItems\"\r\n                        info={actionItems[i]}\r\n                        onActionSucess={async () => { await FetchBoardDetail(boardID) }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"space-evenly\" alignItems=\"flex-start\" spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography align=\"center\" variant=\"h6\">Went well</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={10}>\r\n                                    <TextField type=\"text\" variant=\"filled\" label=\"Info\" onChange={handleWentWellChange} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddWentWell}>Add</Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"column-reverse\">\r\n                                {wentWellListView}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography align=\"center\" variant=\"h6\">To Improve</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={10}>\r\n                                    <TextField type=\"text\" variant=\"filled\" label=\"Info\" onChange={handleToImproveChange} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddToImprove}>Add</Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"column-reverse\">\r\n                                {toImproveListView}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography align=\"center\" variant=\"h6\">Action Items</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={10}>\r\n                                    <TextField type=\"text\" variant=\"filled\" label=\"Info\" onChange={handleActionItemChange} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddActionItem}>Add</Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"column-reverse\">\r\n                                {actionItemsListView}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid, Typography, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, makeStyles } from '@material-ui/core';\r\nimport BoardService from './services/BoardService';\r\n\r\nimport Header from './Header';\r\nimport BoardDetail from './BoardDetail';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    titleStyles: {\r\n        marginBlockStart: 25,\r\n        color: '#283593',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\n\r\nexport default function BoardDetailPage({ userID }) {\r\n    const { boardID } = useParams();\r\n    const [board, setBoard] = useState(null);\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const FetchBoardInfo = async (boardID) => {\r\n        const res = await BoardService.getByID(boardID);\r\n        if (res)\r\n            setBoard(res);\r\n    }\r\n\r\n    useEffect(() => { FetchBoardInfo(boardID) }, []);\r\n\r\n    //Dialog\r\n    const handleClose = () => { setDialogIsOpen(false) };\r\n    const handleTextChange = (e) => { setBoardName(e.target.value) };\r\n    const handleChangeBoardName = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.updateBoardName(boardID, boardName))\r\n            FetchBoardInfo(boardID);\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Header\r\n                        userID={userID}\r\n                        onAvatarClick={() => {\r\n                            console.log(\"avatar clicked\");\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container alignItems=\"baseline\">\r\n                        <Grid item>\r\n                            <Box m={3}>\r\n                                <Typography display=\"block\" variant=\"h5\" className={classes.titleStyles}>\r\n                                    {\r\n                                        board ?\r\n                                            board.name :\r\n                                            \"Loading...\"\r\n                                    }\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button onClick={() => { setDialogIsOpen(true) }}>Edit</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <BoardDetail boardID={boardID} />\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={dialogIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Change Board's name</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board name\"\r\n                        type=\"text\"\r\n                        defaultValue={board ? board.name : \"\"}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onChange={handleTextChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleChangeBoardName} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport HomePage from './HomePage';\r\nimport BoardDetailPage from './BoardDetailPage';\r\n\r\nimport tokenService from './services/token-service';\r\n\r\nexport default function App(props) {\r\n    const [userID, setUserID] = useState(tokenService.getUserID);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\">\r\n                {\r\n                    userID ?\r\n                        <Redirect to=\"/\" /> :\r\n                        <Login\r\n                            onSuccess={() => {\r\n                                setUserID(tokenService.getUserID);\r\n                            }}\r\n                        />\r\n                }\r\n            </Route>\r\n\r\n            <Route exact path=\"/register\">\r\n                {\r\n                    userID ?\r\n                        <Redirect to=\"/\" /> :\r\n                        <Register\r\n                            onSuccess={() => {\r\n                                history.replace(\"/login\");\r\n                            }}\r\n                        />\r\n                }\r\n            </Route>\r\n\r\n            <Route path=\"/board-detail/:boardID\">\r\n                <BoardDetailPage userID={userID} />\r\n            </Route>\r\n\r\n            <Route path=\"/board-detail\">\r\n                <Redirect to=\"/login\" />\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n                {\r\n                    userID ?\r\n                        <HomePage userID={userID}\r\n                            logoutAction={() => {\r\n                                tokenService.deleteToken();\r\n                                setUserID(null);\r\n                            }}\r\n                        /> :\r\n                        <Redirect to=\"/login\" />\r\n                }\r\n            </Route>\r\n        </Switch >\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}