{"version":3,"sources":["services/AccountService.js","Login.js","Register.js","Header.js","BoardCard.js","AddBoard.js","services/BoardService.js","PublicBoards.js","HomePage.js","BoardItem.js","BoardDetail.js","BoardDetailPage.js","services/token-service.js","App.js","index.js"],"names":["API_URL","userID","a","axios","get","res","status","data","console","log","email","password","firstName","lastName","post","localStorage","setItem","tokenId","id","accessToken","put","funcs","login","loginWithGoogle","loginWithFacebook","register","getUser","update","useStyles","makeStyles","theme","root","flexGrow","padding","title","color","fontWeight","Login","onSuccess","classes","useState","setEmail","setPassword","event","preventDefault","AccountService","token","onGoogleSuccess","onFacebookCallback","className","Grid","container","direction","justify","alignItems","spacing","item","Typography","variant","onSubmit","e","FormControl","Box","width","InputLabel","htmlFor","Input","type","fullWidth","value","onInput","String","target","Button","to","clientId","buttonText","onFailure","cookiePolicy","appId","fields","callback","Register","setFirstName","setLastName","appbarstyle","backgroundColor","typographyStyle","flex","Header","onAvatarClick","user","setUser","useEffect","userData","FetchData","AppBar","position","Toolbar","Avatar","src","avatar","onClick","minWidth","pos","marginBottom","modifiedDate","fontSize","icon","BoardCard","name","cardCount","deleteAction","Card","CardContent","align","moment","format","IconButton","aria-label","AddBoard","text","borderRadius","size","boardID","delete","boardName","info","column","newName","oldInfo","newInfo","getBoards","getByID","addBoard","getBoardDetail","addWentWell","addToImprove","addActionItem","deleteBoard","deleteBoardDetail","updateBoardName","updateItemContent","PublicBoards","boards","setBoards","isLoading","setIsLoading","addDiaIsOpen","setAddDiaIsOpen","newBoardName","setNewBoardName","FetchBoard","BoardService","boardList","handleClose","handleAddNewBoard","listView","push","sx","length","i","_id","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","margin","label","onChange","DialogActions","titleStyles","marginBlockStart","HomePage","m","display","ml","xs","BoardItem","columnName","onActionSucess","dialogIsOpen","setDialogIsOpen","content","setContent","handleContentUpdate","Paper","elevation","defaultValue","BoardDetail","wentWell","setWentWell","toImprove","setToImprove","actionItems","setActionItems","newWentWell","setNewWentWell","newToImprove","setNewToImprove","newActionItem","setNewActionItem","paper","textAlign","palette","secondary","FetchBoardDetail","handleAddWentWell","handleAddToImprove","handleAddActionItem","wentWellListView","toImproveListView","actionItemsListView","BoardDetailPage","useParams","board","setBoard","setBoardName","FetchBoardInfo","handleChangeBoardName","getToken","getItem","getUserID","JWT","verify","sub","deleteToken","removeItem","App","props","tokenService","setUserID","history","useHistory","exact","path","replace","logoutAction","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33531495.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = \"https://sprint-retrospective-api.herokuapp.com\";\r\n// const API_URL = \"http://localhost:5000\";\r\n\r\nasync function getUser(userID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/users/${userID}`);\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function register(email, password, firstName, lastName) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/register`, { email, password, firstName, lastName });\r\n        if (res.status === 201) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function login(email, password) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/`, { email, password });\r\n        if (res.status === 200) {\r\n            localStorage.setItem(\"token\", res.data);\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function loginWithGoogle(tokenId) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/login-with-google`, { tokenId });\r\n        if (res.status === 200) {\r\n            localStorage.setItem(\"token\", res.data);\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function loginWithFacebook(id, accessToken) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/users/login-with-facebook`, { id, accessToken });\r\n        if (res.status === 200) {\r\n            localStorage.setItem(\"token\", res.data);\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nasync function update(firstName, lastName) {\r\n    try {\r\n        const res = await axios.put(`${API_URL}/users/update`, { firstName, lastName });\r\n        if (res.status === 200) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nconst funcs = { login, loginWithGoogle, loginWithFacebook, register, getUser, update };\r\nexport default funcs;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Grid, Typography, FormControl, InputLabel, Input, Box, Button } from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\nimport AccountService from './services/AccountService';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 50,\r\n    },\r\n    title: {\r\n        color: '#283593',\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function Login({ onSuccess }) {\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const login = async (event) => {\r\n        event.preventDefault();\r\n        const token = await AccountService.login(email, password);\r\n        if (token) {\r\n            console.log(\"[Login email-password] Nhan duoc Token: \", token);\r\n            onSuccess();\r\n        } else {\r\n            console.log(\"[Login email-password] Khong nhan duoc token\");\r\n        }\r\n    }\r\n\r\n    const onGoogleSuccess = async (res) => {\r\n        const token = await AccountService.loginWithGoogle(res.tokenId);\r\n        if (token) {\r\n            console.log(\"[Login Google] Nhan duoc Token: \", token);\r\n            onSuccess();\r\n        } else {\r\n            console.log(\"[Login Google] Khong nhan duoc token\");\r\n        }\r\n    }\r\n\r\n    const onGoogleFailure = (res) => {\r\n        console.log(\"[Login Google] Failure: \", res);\r\n    }\r\n\r\n    const onFacebookCallback = async (res) => {\r\n        const token = await AccountService.loginWithFacebook(res.id, res.accessToken);\r\n        if (token) {\r\n            console.log(\"[Login Facebook] Nhan duoc Token: \", token);\r\n            onSuccess();\r\n        } else {\r\n            console.log(\"[Login Facebook] Khong nhan duoc token\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item>\r\n                    <Typography className={classes.title} variant=\"h4\" >\r\n                        Login\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <form onSubmit={(e) => login(e)}>\r\n                        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-email\">Email</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-email\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={email}\r\n                                            onInput={e => setEmail(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350} >\r\n                                        <InputLabel htmlFor=\"input-password\">Password</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-password\"\r\n                                            type=\"password\"\r\n                                            fullWidth\r\n                                            value={password}\r\n                                            onInput={e => setPassword(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button type=\"submit\">Login</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>\r\n                        Don't have an account? <Link to=\"/register\">Register</Link>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Box>\r\n                        <GoogleLogin\r\n                            clientId=\"656948797545-io59r3h73is40b8r755em4u5ghgntn21.apps.googleusercontent.com\"\r\n                            buttonText=\"Login with Google\"\r\n                            onSuccess={onGoogleSuccess}\r\n                            onFailure={onGoogleFailure}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Box>\r\n                        <FacebookLogin\r\n                            appId=\"384712686083034\"\r\n                            fields=\"name,email,picture\"\r\n                            callback={onFacebookCallback} />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { Grid, Typography, FormControl, InputLabel, Input, Box, Button } from '@material-ui/core';\r\n\r\nimport AccountService from './services/AccountService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 50,\r\n    },\r\n    title: {\r\n        color: '#283593',\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nexport default function Register({ onSuccess }) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n\r\n    const register = async (event) => {\r\n        event.preventDefault();\r\n        const token = await AccountService.register(email, password, firstName, lastName);\r\n        console.log(\"Register token received: \", token);\r\n        if (token)\r\n            onSuccess();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                <Grid item>\r\n                    <Typography className={classes.title} variant=\"h4\" >\r\n                        Register\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <form onSubmit={(e) => register(e)} >\r\n                        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={2}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-email\">Email</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-email\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={email}\r\n                                            onInput={e => setEmail(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-first-name\">First Name</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-first-name\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={firstName}\r\n                                            onInput={e => setFirstName(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350}>\r\n                                        <InputLabel htmlFor=\"input-last-name\">Last Name</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-last-name\"\r\n                                            type=\"text\"\r\n                                            fullWidth\r\n                                            value={lastName}\r\n                                            onInput={e => setLastName(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <Box width={350} >\r\n                                        <InputLabel htmlFor=\"input-password\">Password</InputLabel>\r\n                                        <Input\r\n                                            id=\"input-password\"\r\n                                            type=\"password\"\r\n                                            fullWidth\r\n                                            value={password}\r\n                                            onInput={e => setPassword(String(e.target.value))}\r\n                                        />\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button type=\"submit\">Register</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography>\r\n                        Already have an account? <Link to=\"/login\">Login</Link>\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, Avatar, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AccountService from './services/AccountService';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    appbarstyle: { backgroundColor: '#2196F3' },\r\n    typographyStyle: { flex: 1 }\r\n}));\r\n\r\n\r\nexport default function Header({ userID, onAvatarClick }) {\r\n    const [user, setUser] = useState(null);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const FetchData = async (userID) => {\r\n            if (userID) {\r\n                const userData = await AccountService.getUser(userID);\r\n                if (userData) {\r\n                    setUser(userData);\r\n                }\r\n            }\r\n        };\r\n        FetchData(userID);\r\n    }, []);\r\n\r\n    return (\r\n        user ? (\r\n            <AppBar position=\"static\" className={classes.appbarstyle} >\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" className={classes.typographyStyle}>Sprint Retrospective</Typography>\r\n                    <Avatar src={user.avatar} />\r\n                    <Button onClick={() => { onAvatarClick() }}>\r\n                        Hi {user.firstName}\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar >\r\n        ) :\r\n            <div>Loading</div>\r\n    );\r\n};","import React from 'react';\r\nimport { makeStyles, Card, CardContent, Typography, IconButton } from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 200,\r\n    },\r\n    title: {\r\n        color: '#8E24AA'\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    modifiedDate: {\r\n        fontSize: 15\r\n    },\r\n    icon: {\r\n        fontSize: 15,\r\n        color: '#283593',\r\n        fontWeight: 'bolder'\r\n    }\r\n});\r\n\r\n\r\nconst BoardCard = ({ name, cardCount, modifiedDate, deleteAction }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card variant='outlined' className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {cardCount} {cardCount > 1 ? \"cards\" : \"card\"}\r\n                </Typography>\r\n                <Typography align=\"right\" className={classes.modifiedDate}>\r\n                    <AccessTimeIcon className={classes.icon} />\r\n                    {moment(modifiedDate).format(\"DD/MM/YYYY\")}\r\n                </Typography>\r\n                <IconButton align=\"right\" aria-label=\"delete\" onClick={() => deleteAction()}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BoardCard;","import React from 'react';\r\nimport { Box, Button } from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function AddBoard({ text, onClick }) {\r\n    return (\r\n        <Box borderRadius={16}>\r\n            <Button size=\"large\" variant=\"outlined\" color=\"primary\" onClick={() => { onClick() }}>\r\n                {text}\r\n            </Button>\r\n        </Box>\r\n    );\r\n};","import axios from 'axios';\r\n\r\n// const API_URL = \"https://sprint-retrospective-api.herokuapp.com\";\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\nasync function getBoards(userID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/boards/${userID}`);\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function deleteBoard(boardID) {\r\n    try {\r\n        await axios.delete(`${API_URL}/boards/${boardID}`);\r\n        return true;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function addBoard(boardName, userID) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add`, { boardName, userID });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getByID(boardID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/boards/get-by-id/${boardID}`);\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getBoardDetail(boardID) {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/boards/details/${boardID}`);\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addWentWell(boardID, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add-went-well/`, { boardID, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addToImprove(boardID, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add-to-improve/`, { boardID, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function addActionItem(boardID, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/add-action-item/`, { boardID, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function deleteBoardDetail(boardID, column, info) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/delete-board-detail/`, { boardID, column, info });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateBoardName(boardID, newName) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/update-board-name/`, { boardID, newName });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateItemContent(boardID, column, oldInfo, newInfo) {\r\n    try {\r\n        const res = await axios.post(`${API_URL}/boards/update-board-detail`, { boardID, column, oldInfo, newInfo });\r\n        if (res.status === 200)\r\n            return res.data;\r\n        else\r\n            return null;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst funcs = { getBoards, getByID, addBoard, getBoardDetail, addWentWell, addToImprove, addActionItem, deleteBoard, deleteBoardDetail, updateBoardName, updateItemContent };\r\n\r\n\r\nexport default funcs;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography, Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\r\n\r\nimport BoardCard from './BoardCard';\r\nimport AddBoard from './AddBoard';\r\n\r\nimport BoardService from './services/BoardService';\r\n\r\n\r\nconst PublicBoards = ({ userID }) => {\r\n\r\n    const [boards, setBoards] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [addDiaIsOpen, setAddDiaIsOpen] = useState(false);\r\n    const [newBoardName, setNewBoardName] = useState(\"\");\r\n\r\n    //Fetch Boards action\r\n    const FetchBoard = async (userID) => {\r\n        if (userID) {\r\n            const boardList = await BoardService.getBoards(userID);\r\n            if (boardList) {\r\n                setBoards(boardList);\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => { FetchBoard(userID); }, []);\r\n\r\n    //Add Dialog action\r\n    const handleClose = () => {\r\n        setAddDiaIsOpen(false);\r\n    }\r\n\r\n    const handleNewBoardNameChange = (e) => {\r\n        setNewBoardName(e.target.value);\r\n    }\r\n\r\n    const handleAddNewBoard = async (e) => {\r\n        e.preventDefault();\r\n        await BoardService.addBoard(newBoardName, userID);\r\n        FetchBoard(userID);\r\n        handleClose();\r\n    }\r\n\r\n\r\n    //Render View\r\n    const listView = [];\r\n    listView.push(\r\n        <Grid item key={(boards && boards.length) || 0} sx={4}>\r\n            <AddBoard text=\"add\"\r\n                onClick={() => {\r\n                    setAddDiaIsOpen(true);\r\n                }}\r\n            />\r\n        </Grid>\r\n    );\r\n    if (boards && boards.length !== 0) {\r\n        for (let i = 0; i < boards.length; i++) {\r\n            listView.push(\r\n                <Grid item key={i} sx={4}>\r\n                    <BoardCard\r\n                        name={boards[i].name}\r\n                        modifiedDate={boards[i].modifiedDate}\r\n                        cardCount={boards[i].cardCount}\r\n                        deleteAction={async () => {\r\n                            await BoardService.deleteBoard(boards[i]._id);\r\n                            await FetchBoard(userID);\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    return (isLoading ?\r\n        <Typography>Loading...</Typography> :\r\n        <div>\r\n            <Grid container spacing={3} >{listView}</Grid>\r\n            <Dialog open={addDiaIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add new Board</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board name\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onChange={handleNewBoardNameChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleAddNewBoard} color=\"primary\">Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PublicBoards;","import React from 'react';\r\nimport { Grid, Typography, Box, makeStyles } from '@material-ui/core';\r\n\r\nimport Header from './Header';\r\nimport PublicBoards from './PublicBoards';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    titleStyles: {\r\n        marginBlockStart: 25,\r\n        color: '#283593',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({ userID }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n                <Header\r\n                    userID={userID}\r\n                    onAvatarClick={() => {\r\n                        console.log(\"avatar clicked\");\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item>\r\n                <Box m={3}>\r\n                    <Typography display=\"block\" variant=\"h5\" className={classes.titleStyles}>\r\n                        My boards\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box ml={3}>\r\n                    <Typography display=\"block\" variant=\"h6\" className={classes.titleStyles}>\r\n                        Public boards\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item container>\r\n                <Grid item xs={1} />\r\n                <Grid item>\r\n                    <PublicBoards userID={userID} />\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Grid, Typography, Box, Paper, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, makeStyles } from '@material-ui/core';\r\nimport BoardService from './services/BoardService';\r\n\r\nexport default function BoardItem({ boardID, columnName, info, onActionSucess }) {\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    //Dialod\r\n    const handleTextChange = (e) => { setContent(e.target.value) };\r\n    const handleClose = () => { setDialogIsOpen(false) };\r\n    const handleContentUpdate = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.updateItemContent(boardID, columnName, info, content)) {\r\n            onActionSucess();\r\n        }\r\n        handleClose();\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Paper elevation={3} >\r\n                <Grid container direction=\"row\">\r\n                    <Grid item>\r\n                        {info}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Button\r\n                                onClick={async () => {\r\n                                    if (await BoardService.deleteBoardDetail(boardID, columnName, info)) {\r\n                                        onActionSucess();\r\n                                    }\r\n                                }}>Delete</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button onClick={() => {\r\n                                setDialogIsOpen(true);\r\n                            }}>Update</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <Dialog open={dialogIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Change content</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Item's content\"\r\n                        type=\"text\"\r\n                        defaultValue={info}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onChange={handleTextChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleContentUpdate} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport BoardService from './services/BoardService';\r\nimport { Grid, Typography, TextField, Button, makeStyles, Box, Paper } from '@material-ui/core';\r\n\r\nimport BoardItem from './BoardItem';\r\n\r\nexport default function BoardDetail({ boardID }) {\r\n    const [wentWell, setWentWell] = useState(null);\r\n    const [toImprove, setToImprove] = useState(null);\r\n    const [actionItems, setActionItems] = useState(null);\r\n\r\n    const [newWentWell, setNewWentWell] = useState(\"\");\r\n    const [newToImprove, setNewToImprove] = useState(\"\");\r\n    const [newActionItem, setNewActionItem] = useState(\"\");\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    //Fetch Board Details\r\n    const FetchBoardDetail = async (boardID) => {\r\n        const res = await BoardService.getBoardDetail(boardID);\r\n        if (res) {\r\n            setWentWell(res.wentWell);\r\n            setToImprove(res.toImprove);\r\n            setActionItems(res.actionItems);\r\n        } else\r\n            console.log(\"Not have board details\");\r\n    }\r\n    useEffect(() => { FetchBoardDetail(boardID); }, []);\r\n\r\n    //Add new\r\n    const handleWentWellChange = (e) => {\r\n        setNewWentWell(e.target.value);\r\n    };\r\n    const handleToImproveChange = (e) => {\r\n        setNewToImprove(e.target.value);\r\n    };\r\n    const handleActionItemChange = (e) => {\r\n        setNewActionItem(e.target.value);\r\n    }\r\n    const handleAddWentWell = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.addWentWell(boardID, newWentWell)) {\r\n            FetchBoardDetail(boardID);\r\n        }\r\n    }\r\n    const handleAddToImprove = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.addToImprove(boardID, newToImprove)) {\r\n            FetchBoardDetail(boardID);\r\n        }\r\n    }\r\n    const handleAddActionItem = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.addActionItem(boardID, newActionItem)) {\r\n            FetchBoardDetail(boardID);\r\n        }\r\n    }\r\n\r\n    //Render\r\n    const wentWellListView = [];\r\n    if (wentWell && wentWell.length !== 0) {\r\n        for (let i = 0; i < wentWell.length; i++) {\r\n            wentWellListView.push(\r\n                <Grid item key={i}>\r\n                    <BoardItem\r\n                        boardID={boardID}\r\n                        columnName=\"WentWell\"\r\n                        info={wentWell[i]}\r\n                        onActionSucess={async () => { await FetchBoardDetail(boardID) }}\r\n                    />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    const toImproveListView = [];\r\n    if (toImprove && toImprove.length !== 0) {\r\n        for (let i = 0; i < toImprove.length; i++) {\r\n            toImproveListView.push(\r\n                <Grid item key={i}>\r\n                    <Paper elevation={3} >\r\n                        {toImprove[i]}\r\n                        <Button\r\n                            onClick={async () => {\r\n                                if (await BoardService.deleteBoardDetail(boardID, \"ToImprove\", toImprove[i])) {\r\n                                    FetchBoardDetail(boardID);\r\n                                }\r\n                            }}>Delete</Button>\r\n                    </Paper>\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    const actionItemsListView = [];\r\n    if (actionItems && actionItems.length !== 0) {\r\n        for (let i = 0; i < actionItems.length; i++) {\r\n            actionItemsListView.push(\r\n                <Grid item key={i}>\r\n                    <Paper elevation={3} >\r\n                        {actionItems[i]}\r\n                        <Button\r\n                            onClick={async () => {\r\n                                if (await BoardService.deleteBoardDetail(boardID, \"ActionItems\", actionItems[i])) {\r\n                                    FetchBoardDetail(boardID);\r\n                                }\r\n                            }}>Delete</Button>\r\n                    </Paper>\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container justify=\"space-evenly\" alignItems=\"flex-start\" spacing={3}>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography align=\"center\" variant=\"h6\">Went well</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={10}>\r\n                                    <TextField type=\"text\" variant=\"filled\" label=\"Info\" onChange={handleWentWellChange} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddWentWell}>Add</Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"column-reverse\">\r\n                                {wentWellListView}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography align=\"center\" variant=\"h6\">To Improve</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={10}>\r\n                                    <TextField type=\"text\" variant=\"filled\" label=\"Info\" onChange={handleToImproveChange} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddToImprove}>Add</Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"column-reverse\">\r\n                                {toImproveListView}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Typography align=\"center\" variant=\"h6\">Action Items</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container alignItems=\"center\">\r\n                                <Grid item xs={10}>\r\n                                    <TextField type=\"text\" variant=\"filled\" label=\"Info\" onChange={handleActionItemChange} />\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Box>\r\n                                        <Button onClick={handleAddActionItem}>Add</Button>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container justify=\"space-between\" alignItems=\"center\" direction=\"column-reverse\">\r\n                                {actionItemsListView}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Grid, Typography, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, makeStyles } from '@material-ui/core';\r\nimport BoardService from './services/BoardService';\r\n\r\nimport Header from './Header';\r\nimport BoardDetail from './BoardDetail';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    titleStyles: {\r\n        marginBlockStart: 25,\r\n        color: '#283593',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nexport default function BoardDetailPage() {\r\n    const { boardID } = useParams();\r\n    const [board, setBoard] = useState(null);\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n    const userID = \"5f97c9e93f2cf8fef63f0777\";\r\n    const classes = useStyles();\r\n\r\n    const FetchBoardInfo = async (boardID) => {\r\n        const res = await BoardService.getByID(boardID);\r\n        if (res)\r\n            setBoard(res);\r\n    }\r\n\r\n    useEffect(() => { FetchBoardInfo(boardID) }, []);\r\n\r\n    //Dialog\r\n    const handleClose = () => { setDialogIsOpen(false) };\r\n    const handleTextChange = (e) => { setBoardName(e.target.value) };\r\n    const handleChangeBoardName = async (e) => {\r\n        e.preventDefault();\r\n        if (await BoardService.updateBoardName(boardID, boardName))\r\n            FetchBoardInfo(boardID);\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Header\r\n                        userID={userID}\r\n                        onAvatarClick={() => {\r\n                            console.log(\"avatar clicked\");\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Grid container alignItems=\"baseline\">\r\n                        <Grid item>\r\n                            <Box m={3}>\r\n                                <Typography display=\"block\" variant=\"h5\" className={classes.titleStyles}>\r\n                                    {\r\n                                        board ?\r\n                                            board.name :\r\n                                            \"Loading...\"\r\n                                    }\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button onClick={() => { setDialogIsOpen(true) }}>Edit</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <BoardDetail boardID={boardID} />\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={dialogIsOpen} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Change Board's name</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board name\"\r\n                        type=\"text\"\r\n                        defaultValue={board ? board.name : \"\"}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        onChange={handleTextChange}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                    <Button onClick={handleChangeBoardName} color=\"primary\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import JWT from 'jsonwebtoken';\r\n\r\n\r\nconst getToken = () => {\r\n    return localStorage.getItem(\"token\") || null;\r\n}\r\n\r\nconst getUserID = () => {\r\n    const token = getToken();\r\n    if (!token)\r\n        return null;\r\n    const payload = JWT.verify(token, \"1712354\");\r\n    return payload.sub;\r\n};\r\n\r\nconst deleteToken = () => {\r\n    return localStorage.removeItem(\"token\");\r\n}\r\n\r\nconst funcs = { getUserID, getToken, deleteToken };\r\n\r\nexport default funcs;","import React, { useState } from 'react';\r\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport HomePage from './HomePage';\r\nimport BoardDetailPage from './BoardDetailPage';\r\n\r\nimport tokenService from './services/token-service';\r\n\r\nexport default function App(props) {\r\n    const [userID, setUserID] = useState(tokenService.getUserID);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\">\r\n                {\r\n                    userID ?\r\n                        <Redirect to=\"/\" /> :\r\n                        <Login\r\n                            onSuccess={() => {\r\n                                setUserID(tokenService.getUserID);\r\n                            }}\r\n                        />\r\n                }\r\n            </Route>\r\n\r\n            <Route exact path=\"/register\">\r\n                {\r\n                    userID ?\r\n                        <Redirect to=\"/\" /> :\r\n                        <Register\r\n                            onSuccess={() => {\r\n                                history.replace(\"/login\");\r\n                            }}\r\n                        />\r\n                }\r\n            </Route>\r\n\r\n            <Route path=\"/board-detail/:boardID\">\r\n                <BoardDetailPage />\r\n            </Route>\r\n\r\n            <Route path=\"/board-detail\">\r\n                <Redirect to=\"/login\" />\r\n            </Route>\r\n\r\n            <Route exact path=\"/\">\r\n                {\r\n                    userID ?\r\n                        <HomePage userID={userID}\r\n                            logoutAction={() => {\r\n                                tokenService.deleteToken();\r\n                                setUserID(null);\r\n                            }}\r\n                        /> :\r\n                        <Redirect to=\"/login\" />\r\n                }\r\n            </Route>\r\n        </Switch >\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}