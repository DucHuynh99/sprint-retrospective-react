{"version":3,"sources":["Header.js","BoardCard.js","PublicBoards.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","appbarstyle","backgroundColor","typographyStyle","flex","Header","classes","AppBar","position","className","Toolbar","Typography","variant","Avatar","src","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","BoardCard","name","cardCount","modifiedDate","Card","CardContent","component","color","PublicBoards","boardList","boards","Array","from","listView","length","i","push","Grid","item","sx","container","spacing","axios","require","default","titleStyles","marginBlockStart","fontWeight","App","useState","setBoards","isLoading","setIsLoading","useEffect","a","get","respone","data","console","log","fetchData","direction","Box","m","ml","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94b30fce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    appbarstyle: { backgroundColor: '#2196F3' },\r\n    typographyStyle: { flex: 1 }\r\n}));\r\n\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\" className={classes.appbarstyle}>\r\n            <Toolbar>\r\n                <Typography variant=\"h5\" className={classes.typographyStyle}>Sprint Retrospective</Typography>\r\n                <Avatar src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png\" />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Card, CardContent, Typography, makeStyles } from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\n\r\nconst BoardCard = ({ name, cardCount, modifiedDate }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {name}\r\n                </Typography>\r\n                <AccessTimeIcon />\r\n                <Typography>{modifiedDate}</Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {cardCount} card\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default BoardCard;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport BoardCard from './BoardCard';\r\n\r\n\r\nconst PublicBoards = ({ boardList }) => {\r\n    const boards = Array.from(boardList);\r\n    const listView = [];\r\n    if (boards.length !== 0) {\r\n        for (let i = 0; i < boards.length; i++) {\r\n            listView.push(\r\n                <Grid item\r\n                    key={i}\r\n                    sx={4}>\r\n                    <BoardCard\r\n                        name={boards[i].name}\r\n                        modifiedDate={boards[i].modifiedDate}\r\n                        cardCount={boards[i].cardCount} />\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n    return (<Grid container spacing={3} >{listView}</Grid>);\r\n};\r\n\r\n\r\nexport default PublicBoards;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Typography, Box, makeStyles } from '@material-ui/core';\r\nimport Header from './Header';\r\nimport PublicBoards from './PublicBoards';\r\nconst axios = require('axios').default;\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    titleStyles: {\r\n        marginBlockStart: 25,\r\n        color: '#283593',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\n\r\nexport default function App() {\r\n    const [boards, setBoards] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const respone = await axios.get(\"https://sprint-retrospective-api.herokuapp.com/boards/5f97c9e93f2cf8fef63f0777\");\r\n                setBoards(respone.data);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n                <Header />\r\n            </Grid>\r\n            <Grid item>\r\n                <Box m={3}>\r\n                    <Typography display=\"block\" variant=\"h5\" className={classes.titleStyles}>\r\n                        My boards\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item>\r\n                <Box ml={3}>\r\n                    <Typography display=\"block\" variant=\"h6\" className={classes.titleStyles}>\r\n                        Public boards\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item container>\r\n                <Grid item xs={1} />\r\n                <Grid item>\r\n                    {isLoading ?\r\n                        <Typography>Loading...</Typography> :\r\n                        <PublicBoards boardList={boards} />\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}